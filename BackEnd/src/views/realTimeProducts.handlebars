<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos en tiempo real</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="../css/index.css">
</head>
<body class="container" style="background-color: #1e1d1e;">

    {{!-- Formulario de agrego de productos --}}
    <div class="d-flex  justify-content-center">

    <div class="p-4 my-3 rounded shadow" style="background-color: #403e40; width:45rem;">
        <h1 class="mb-5 text-center" style="color: rgb(0, 116, 58);">Agrega un producto</h1>
    <form id="product-form">
        <input type="text" class="form-control py-3 my-3 shadow input-custom" id="product-title" placeholder="Titulo" required>
        <input type="text" class="form-control py-3 my-3 shadow input-custom" id="product-description" placeholder="Descripción" required>
        <input type="text" class="form-control py-3 my-3 shadow input-custom" id="product-code" placeholder="Código" required>
        <input type="text" class="form-control py-3 my-3 shadow input-custom" id="product-category" placeholder="Categoría" required>
        <div class="row">
        <div class="col">
        <input type="number" class="form-control py-3 my-2 shadow input-custom" id="product-price" placeholder="Precio" required min="1">
        </div>
        <div class="col">
        <input type="number" class="form-control py-3 my-2 shadow input-custom" id="product-stock" placeholder="Stock" required min="1">
        </div>
        </div>
        <button type="submit" class="mt-3 btn btn-success w-100">Agregar producto</button>
    </form>
    </div>
    </div>

    <h1 class="my-4 text-center" style="color: rgb(0, 116, 58);">Productos en tiempo real</h1>
    <ul class="list-group mb-3" id="product-list">
    {{!-- van los productos generados en el js --}}
    </ul>
    
    {{!-- Estilo del Formulario --}}
    <style>
        .input-custom {
        background-color: #252225 !important;
        border-color: #252225 !important;
        color: white !important;
    }

    .input-custom::placeholder {
        color: white; 
    }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        socket.on('actualizarProductos', (products) => {
            const productList = document.getElementById('product-list');
            productList.innerHTML = '';
            products.forEach((product) => {
                const productItem = `
                <li id="product-${product.id}" class="d-flex list-group-item border shadow rounded justify-content-between align-items-center my-1" style="background-color: #403e40; border-color: #403e40 !important;">
                    <div>
            <h3 class="mb-3 text-light">${product.title}</h3>
            <p style="color: rgb(0, 116, 58);" class="m-0">${product.description}</p>
        </div>
        <span style="color: rgb(0, 116, 58);">Precio: $${product.price}</span>
        <button onclick="deleteProduct('${product.id}')" class="btn btn-danger btn-sm border-0">Eliminar</button>
                </li>
                `;
                productList.innerHTML += productItem;
            });
        });

        function deleteProduct(productId) {
            socket.emit('deleteProduct', productId);
        }

        document.getElementById('product-form').addEventListener('submit', (e) => {
            e.preventDefault();

            const title = document.getElementById('product-title').value;
            const description = document.getElementById('product-description').value;
            const code = document.getElementById('product-code').value;
            const price = document.getElementById('product-price').value;
            const stock = document.getElementById('product-stock').value;
            const category = document.getElementById('product-category').value;

            if (price < 0 || price < 0) {
                alert("Error: El precio y el stock no pueden ser menores a 0.");
                return;
            }

            socket.emit('addProduct', {
                title,
                description,
                code,
                price,
                stock,
                category,
                status: true
            });

            document.getElementById('product-form').reset();
        });
    </script>

</body>
</html>
