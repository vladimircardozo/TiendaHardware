<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body style="background-color: #1e1d1e;">
    <div class="container">
      <div class="d-flex justify-content-between my-4">
    <h1 class="" style="color: rgb(0, 116, 58);">Lista de productos</h1>
    <div class="d-flex align-items-center">
    <a href="/api/carts/{{cartId}}" class="btn" style="background-color: rgb(36, 114, 75);">Ir al Carrito</a>
    <a href="/api/sessions/login" class="mx-2 py-1 fs-5 links hvr-underline-reveal">Login</a>
    <a href="/api/sessions/register" class="mx-2 py-1 fs-5 links hvr-underline-reveal">Register</a>
    <a href="/realTimeProducts" class="mx-2 py-1 fs-5 links hvr-underline-reveal">Modificar productos</a>
    </div>
    </div>
    <ul class="list-group mb-3">
      {{#each products}}
        <li class="d-flex list-group-item border shadow rounded justify-content-between align-items-center my-1" style="background-color: #403e40; border-color: #403e40 !important;">
          <div>
          <h3 class="mb-3 text-light">{{this.title}}</h3>
          </div>
          <div>
          <span style="color: rgb(0, 116, 58);">Precio: ${{this.price}}</span>
          </div>
          <div class="d-flex flex-column align-items-center gap-2">
            <a href="/product/{{this._id}}" class="btn btn-primary">Ver detalles</a>
            
              <button onclick="addToCart('{{this._id}}')" class="btn btn-success btn-sm pt-0">Agregar al carrito</button>
            
          </div>
        </li>
      {{/each}}
    </ul>
    </div>
    <script src='/socket.io/socket.io.js'></script>
    <script>
      const socket = io(); socket.emit('message', 'cliente conectado');
    </script>
    <script>
    async function addToCart(productId) {
    let cartId = localStorage.getItem('cartId') || 'DEFAULT_CART_ID';
    try {
        let cartResponse = await fetch(`/api/carts/${cartId}`);

        if (!cartResponse.ok) {
            const newCartResponse = await fetch(`/api/carts`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            });

            const newCart = await newCartResponse.json();
            cartId = newCart._id;
            localStorage.setItem('cartId', cartId); // Guardamos el nuevo ID
        }

        const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
        });

        if (response.ok) {
            alert('Producto agregado al carrito!');
        } else {
            alert('Error al agregar producto al carrito');
        }
    } catch (error) {
        console.error('Error al agregar al carrito', error);
        alert('Error al agregar el producto al carrito.');
    }
}
</script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <style>
    .links {
        color: rgb(0, 116, 58); 
        text-decoration: none;
    }

    .links:hover {
      color: rgb(1, 70, 35);
    }

    .hvr-underline-reveal {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  overflow: hidden;
}
.hvr-underline-reveal:before {
  content: "";
  position: absolute;
  z-index: -1;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgb(1, 70, 35);
  height: 2px;
  -webkit-transform: translateY(4px);
  transform: translateY(4px);
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvr-underline-reveal:hover:before, .hvr-underline-reveal:focus:before, .hvr-underline-reveal:active:before {
  -webkit-transform: translateY(0);
  transform: translateY(0);
}
  </style>
  </body>
</html>